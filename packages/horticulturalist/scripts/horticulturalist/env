#!/bin/sh

merge_environment()
{
  local version='0.6.0'
  local name='horticulturalist'

  local prefix="$1"

  export PACKAGE_NAME="$name"
  export PACKAGE_VERSION="$version"

  export PACKAGE_SCRIPTS="$prefix/scripts/$name"
  export PACKAGE_STORAGE="$prefix/storage/$name"
  export PACKAGE_SOFTWARE="$prefix/software/$name"
  export PACKAGE_SETTINGS="$prefix/settings/$name"

  mkdir -p "${PACKAGE_STORAGE}/passwd"
  chmod 600 "${PACKAGE_STORAGE}/passwd"
  export COUCH_PASSWD_FILE="${PACKAGE_STORAGE}/passwd/couchdb"

  export MEDIC_CORE_PACKAGE_ROOT="$PACKAGE_ROOT"
  return 0
}

get_couchdb_config_port() #todo move this to utils somewhere
{
  local couch_version="$($MEDIC_CORE_PACKAGE_ROOT/bin/couchdb -V | head -1 | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | grep -oE '[0-9]+' | head -1)"
  if [ "$couch_version" = "1" ]
  then
    echo '5984'
  else
    echo '5986'
  fi
}

get_concierge_password() #todo move this to utils somewhere
{
  local passwd_file="$PACKAGE_STORAGE/../concierge/passwd/concierge"
  echo "$(cat $passwd_file)"
}

get_couchdb_as_concierge_url()
{
  local concierge_password="$(get_concierge_password)"
  local port="$(get_couchdb_config_port)"
  echo "http://concierge:${concierge_password}@localhost:${port}"
}

random_password() #todo move this to utils somewhere
{
  echo "$($MEDIC_CORE_PACKAGE_ROOT/bin/openssl rand -hex 256)"
}

create_couch_user() #todo move this to utils somewhere
{
  echo "Adding couchdb user ${PACKAGE_NAME}"
  local couch_as_concierge="$(get_couchdb_as_concierge_url)"
  local password="$(random_password)"
  curl -qX PUT "${couch_as_concierge}/_config/admins/${PACKAGE_NAME}" -d "\"${password}\"" >/dev/null 2>&1
  # todo error catching?
  echo "$password" > "${COUCH_PASSWD_FILE}"
  chmod 600 "${COUCH_PASSWD_FILE}"
}

remove_couch_user()
{
  echo "Removing couchdb user ${PACKAGE_NAME}"
  local couch_as_concierge="$(get_couchdb_as_concierge_url)"
  curl -X DELETE "${couch_as_concierge}/_config/admins/${PACKAGE_NAME}" >/dev/null 2>&1
  # todo error catching?
  rm $COUCH_PASSWD_FILE
}

bootstrap()
{
  echo "Bootstrapping"
  export COUCH_NODE_NAME='couchdb@localhost' &&
  local password=$(cat $COUCH_PASSWD_FILE) &&
  export COUCH_URL="http://${PACKAGE_NAME}:${password}@localhost:5984/medic" &&
  local node=`which node` &&
  cd "$PACKAGE_SOFTWARE/current" &&
  su -c "$node src/index.js --medic-os --only-bootstrap=@beta"
}
